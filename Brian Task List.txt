
[x] Find out why Selector for getSelectedSiteIsLoaded is returning stale data from the state.
[x] Solve error connecting to MongoDB. Just happened out of the blue: "Topology was destroyed"
[x] Solve problem of Selected SiteID not updating from change to Router parameters.
[] Add a validator module for checking the shape of arbitrary objects in the applicaiton.
[] Currently the SitesList is going to re-render for every change to a child component. Consider making the SiteList just an array of SiteID,Name within a new selector to keep the component stable.
[x] Find out with the SiteDetailsContainer is not re-rendering after a change to the State.
[] Refactor codebase to get rid of inconsistent use of "siteList..." versus "sitesList".
[x] Store the selected Site ID on the State after a Route change so that the Site Details can be memoized in various selectors.
	[x] Move the info about the SiteList, such as error, inProgress, etc. into its own Key on the state and combine reducers. 
[x] Refactor the dispatch calls for "isLoading(false)" on SiteDeails Load/Save.  The Reducers can infer when the action for the Response or Error is given.
[] Find out why the ES7 "rest" operators is reporting a syntax error in the browser.  Chrome works with the same syntax natively.  Maybe it's an ESlint thing?
[] Confirm that WebPack will strip out console.log() statements in production.
[x] Solve Double-load problem on SiteListContainer component.
	[x] Figure out why MapStateToProps is not reflecting the state returned from the reducer in the Container method.
	[x] Explain why there seems to be 2 separate Redux stores.
	[x] Find out why the entry page (/app/js/app.js) is executed twice.
[x] Add CORS support for the REST service.
[x] Fix error that started showing up: Module not found: Error: Can't resolve 'whatwg-fetch' in ...
	[x] I had to take out the Pollyfill I created for "fetch" in the WebPack config.  Maybe I need to import another library like Axios or manually pollyfill?
[x] Create a Container component for the SiteList that will take care of loading the data from the API if the state is empty.
[] Setup Decorators to validate function inputs, like TypeScript or PropTypes.
[x] Stub out actions with basic Thunk workflow.
	[x] Decide on convention for Action types.  SFA
		[x] How to deal with Errors on PUT "SiteData" which has a SiteID associated with the Payload.
	[x] Create Thunk Aysnc Actions for GetSiteList, GetSiteData(SiteID), SaveSiteData(siteId)
[x] Decide on a process for loading data from the server and saving mutations.
[] Design shape of reducers
[] Find a way to keep the "key" entries unique on <flag> components within Site Details view.
[] Figure out how to use Nomalizr with "flag" entries.  They don't have unique ID's on their own.
[] Create REST API
	[x] Store DB credentials within an ENV variable or maybe a flat file, just to demonstrate a consideration for security.
	[] Get DB Access working with Promises.
	[x] Populate MongoDB with a temp script.
	[x] Figure out why I can't perform a "findOne()" by _id.
	[x] Create a GET route for /sites
	[x] Create a GET route for /sites/:id which returns a single Site document.
	[x] Create a PUT route for /sites/:id which updates the single Site document. 
		[x] Verify that the document exists first, no upserting. 
		[x] Validate contents of the Site document.
	[] Setup Mongoose to validate the Site Update route.
	[] Unit test with Mocha/Chai
		[x] Research Mockgoose. It looks like it requires MongoDB to be installed locally.
		[] Configure an ENV variable within Unit Test and adapt REST service.
		[] Since MongoDB is in Cloud, setup another "testDB" where the default data script can be loaded each time.
		[] Modify the "defaultData" method to insert addtional "flags" within the array on each "site" document. 
	[] Configure a consumer contract and Pact broker for Microservices

[x] Configure server-side framework
	[x] Install Express
	[x] Install Mongo
	[x] Sign up for a MongoDB provider in the cloud.
	[x] Verify connection to Mongo server on startup of Express app.

[] Configure client-side framework
	[x] Install WebPack DevServer
	[x] Install Babel and configure .babelrc
	[x] Install React and React-DOM
	[x] Create test file for /app/js/app.js
	[x] Make sure that running "webpack" (global) will output to DIST.
	[x] Install file-loader.
	[x] Solve WebPack error: ERROR in Entry module not found: Error: Can't resolve 'file' in '\Projects\full-stack-coding-exercise/app'
	[x] Solve issue with "Multiple assets emit to the same filename"
		[x] Install html-webpack-plugin instead of using file-loader.
	[] Find out why WebPack 2 doesn't use a "root" for module dependencies.  How important is this over using relative paths?
	[X] Install ESLint... Use AirBnB's rules: https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb
	[x] Install React Hot Reloader
	[x] Fix error after insalling Hot Reloader to WebPack: 'import' and 'export' may only appear at the top level (3:0)
	[x] Install React-Router
		[x] Create 2 basic routes for the SiteList and SiteDetail/:slug:
	[x] Install Redux
	[] Install Normalizr
	[] Install Immutable.js
	[] Install CSS framework
	[x] Install React-Thunk
	[] Install React-Promises
	[x] Pollyfill the "fetch" and "promise" using WebPack, doesn't look like Babel does this.
		[] Verify that Pollyfill worked, even if WebPack compiled OK.
	[x] Install "prop-types"

[] Research CSS Solution.  CSS Modules ... Styled Components???
[x] Get JSX / Babel Package for SublimeText
[] Figure out why Sublime Text is not honoring the .editorconfig IDE settings.
	[] Figure out why .sublime_project is not allowing Tabbed spaces.

[x] Setup local repo with a Fork and GitFlow
[x] Go through Readme and clarify any ambiguity.  exercise 